module tb_pixel_filter();

    // Inputs
    reg [11:0] pixel_in;  // 输入像素值 (R4:G4:B4)
    reg [17:0] sw;        // 开关：1 - 阈值操作，2 - 亮度调整

    // Outputs
    wire [11:0] pixel_out;  // 处理后的像素输出

    // Instantiate the pixel_filter module
    pixel_filter uut (
        .pixel_in(pixel_in),
        .sw(sw),
        .pixel_out(pixel_out)
    );

    // Initial block to apply test vectors
    initial begin
        // Dump waveform for simulation
        $dumpfile("pixel_filter_test.vcd");
        $dumpvars(0, tb_pixel_filter);

        // Test case 1: Threshold operation, pixel below threshold
        sw = 18'b000000000000000001; // Threshold operation enabled
        pixel_in = 12'h333;          // Pixel R=3, G=3, B=3 (low brightness)
        #10;
        $display("Threshold mode, pixel_in = %h, pixel_out = %h", pixel_in, pixel_out);

        // Test case 2: Threshold operation, pixel above threshold
        pixel_in = 12'hEEE;          // Pixel R=14, G=14, B=14 (high brightness)
        #10;
        $display("Threshold mode, pixel_in = %h, pixel_out = %h", pixel_in, pixel_out);

        // Test case 3: Brightness adjustment, pixel with medium brightness
        sw = 18'b000000000000000010; // Brightness adjustment enabled
        pixel_in = 12'h777;          // Pixel R=7, G=7, B=7
        #10;
        $display("Brightness mode, pixel_in = %h, pixel_out = %h", pixel_in, pixel_out);

        // Test case 4: Brightness adjustment, pixel at max brightness (saturation test)
        pixel_in = 12'hFFF;          // Pixel R=15, G=15, B=15 (maximum value)
        #10;
        $display("Brightness mode, pixel_in = %h, pixel_out = %h", pixel_in, pixel_out);

        // Test case 5: Both operations enabled (priority to threshold)
        sw = 18'b000000000000000011; // Both threshold and brightness adjustment enabled
        pixel_in = 12'h777;          // Pixel R=7, G=7, B=7 (medium brightness)
        #10;
        $display("Both modes enabled, pixel_in = %h, pixel_out = %h", pixel_in, pixel_out);

        // Finish the test
        $finish;
    end
endmodule
