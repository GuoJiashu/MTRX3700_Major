|uart_comm
clk => uart_tx:uart_instance.clk
clk => data_mem[21][0].CLK
clk => data_mem[21][1].CLK
clk => data_mem[21][2].CLK
clk => data_mem[21][3].CLK
clk => data_mem[21][4].CLK
clk => data_mem[21][5].CLK
clk => data_mem[21][6].CLK
clk => data_mem[21][7].CLK
clk => data_mem[19][0].CLK
clk => data_mem[19][1].CLK
clk => data_mem[19][2].CLK
clk => data_mem[19][3].CLK
clk => data_mem[19][4].CLK
clk => data_mem[19][5].CLK
clk => data_mem[19][6].CLK
clk => data_mem[19][7].CLK
clk => data_mem[13][0].CLK
clk => data_mem[13][1].CLK
clk => data_mem[13][2].CLK
clk => data_mem[13][3].CLK
clk => data_mem[13][4].CLK
clk => data_mem[13][5].CLK
clk => data_mem[13][6].CLK
clk => data_mem[13][7].CLK
clk => data_mem[11][0].CLK
clk => data_mem[11][1].CLK
clk => data_mem[11][2].CLK
clk => data_mem[11][3].CLK
clk => data_mem[11][4].CLK
clk => data_mem[11][5].CLK
clk => data_mem[11][6].CLK
clk => data_mem[11][7].CLK
clk => SW_changed.CLK
clk => SW_prev[0].CLK
clk => SW_prev[1].CLK
clk => SW_prev[2].CLK
clk => SW_prev[3].CLK
clk => SW_prev[4].CLK
clk => SW_prev[5].CLK
clk => SW_prev[6].CLK
clk => SW_prev[7].CLK
clk => SW_prev[8].CLK
clk => SW_prev[9].CLK
clk => SW_prev[10].CLK
clk => SW_prev[11].CLK
clk => SW_prev[12].CLK
clk => SW_prev[13].CLK
clk => SW_prev[14].CLK
clk => SW_prev[15].CLK
clk => SW_prev[16].CLK
clk => SW_prev[17].CLK
clk => ready_trigger.CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => sending.CLK
clk => index[0].CLK
clk => index[1].CLK
clk => index[2].CLK
clk => index[3].CLK
clk => index[4].CLK
SW[0] => Equal0.IN17
SW[0] => data_mem.OUTPUTSELECT
SW[0] => data_mem.OUTPUTSELECT
SW[0] => SW_prev[0].ADATA
SW[0] => SW_prev[0].DATAIN
SW[1] => Equal0.IN16
SW[1] => data_mem.OUTPUTSELECT
SW[1] => SW_prev[1].ADATA
SW[1] => data_mem.DATAA
SW[1] => SW_prev[1].DATAIN
SW[2] => Equal0.IN15
SW[2] => SW_prev[2].ADATA
SW[2] => data_mem.DATAA
SW[2] => SW_prev[2].DATAIN
SW[3] => Equal0.IN14
SW[3] => SW_prev[3].ADATA
SW[3] => SW_prev[3].DATAIN
SW[4] => Equal0.IN13
SW[4] => SW_prev[4].ADATA
SW[4] => SW_prev[4].DATAIN
SW[5] => Equal0.IN12
SW[5] => SW_prev[5].ADATA
SW[5] => SW_prev[5].DATAIN
SW[6] => Equal0.IN11
SW[6] => SW_prev[6].ADATA
SW[6] => SW_prev[6].DATAIN
SW[7] => Equal0.IN10
SW[7] => SW_prev[7].ADATA
SW[7] => SW_prev[7].DATAIN
SW[8] => Equal0.IN9
SW[8] => SW_prev[8].ADATA
SW[8] => SW_prev[8].DATAIN
SW[9] => Equal0.IN8
SW[9] => SW_prev[9].ADATA
SW[9] => SW_prev[9].DATAIN
SW[10] => Equal0.IN7
SW[10] => SW_prev[10].ADATA
SW[10] => SW_prev[10].DATAIN
SW[11] => Equal0.IN6
SW[11] => SW_prev[11].ADATA
SW[11] => SW_prev[11].DATAIN
SW[12] => Equal0.IN5
SW[12] => SW_prev[12].ADATA
SW[12] => SW_prev[12].DATAIN
SW[13] => Equal0.IN4
SW[13] => SW_prev[13].ADATA
SW[13] => SW_prev[13].DATAIN
SW[14] => Equal0.IN3
SW[14] => SW_prev[14].ADATA
SW[14] => SW_prev[14].DATAIN
SW[15] => Equal0.IN2
SW[15] => SW_prev[15].ADATA
SW[15] => SW_prev[15].DATAIN
SW[16] => Equal0.IN1
SW[16] => SW_prev[16].ADATA
SW[16] => SW_prev[16].DATAIN
SW[17] => Equal0.IN0
SW[17] => SW_prev[17].ADATA
SW[17] => SW_prev[17].DATAIN
rst => uart_tx:uart_instance.rst
rst => SW_prev[0].ALOAD
rst => SW_prev[1].ALOAD
rst => SW_prev[2].ALOAD
rst => SW_prev[3].ALOAD
rst => SW_prev[4].ALOAD
rst => SW_prev[5].ALOAD
rst => SW_prev[6].ALOAD
rst => SW_prev[7].ALOAD
rst => SW_prev[8].ALOAD
rst => SW_prev[9].ALOAD
rst => SW_prev[10].ALOAD
rst => SW_prev[11].ALOAD
rst => SW_prev[12].ALOAD
rst => SW_prev[13].ALOAD
rst => SW_prev[14].ALOAD
rst => SW_prev[15].ALOAD
rst => SW_prev[16].ALOAD
rst => SW_prev[17].ALOAD
rst => ready_trigger.ACLR
rst => data_tx[0].ACLR
rst => data_tx[1].ACLR
rst => data_tx[2].ACLR
rst => data_tx[3].ACLR
rst => data_tx[4].ACLR
rst => data_tx[5].ACLR
rst => data_tx[6].ACLR
rst => data_tx[7].ACLR
rst => sending.ACLR
rst => index[0].ACLR
rst => index[1].ACLR
rst => index[2].ACLR
rst => index[3].ACLR
rst => index[4].ACLR
rst => data_mem[21][0].ENA
rst => SW_changed.ENA
rst => data_mem[11][7].ENA
rst => data_mem[11][6].ENA
rst => data_mem[11][5].ENA
rst => data_mem[11][4].ENA
rst => data_mem[11][3].ENA
rst => data_mem[11][2].ENA
rst => data_mem[11][1].ENA
rst => data_mem[11][0].ENA
rst => data_mem[13][7].ENA
rst => data_mem[13][6].ENA
rst => data_mem[13][5].ENA
rst => data_mem[13][4].ENA
rst => data_mem[13][3].ENA
rst => data_mem[13][2].ENA
rst => data_mem[13][1].ENA
rst => data_mem[13][0].ENA
rst => data_mem[19][7].ENA
rst => data_mem[19][6].ENA
rst => data_mem[19][5].ENA
rst => data_mem[19][4].ENA
rst => data_mem[19][3].ENA
rst => data_mem[19][2].ENA
rst => data_mem[19][1].ENA
rst => data_mem[19][0].ENA
rst => data_mem[21][7].ENA
rst => data_mem[21][6].ENA
rst => data_mem[21][5].ENA
rst => data_mem[21][4].ENA
rst => data_mem[21][3].ENA
rst => data_mem[21][2].ENA
rst => data_mem[21][1].ENA
neg_l => always0.IN0
neg_l => sending.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => data_tx.OUTPUTSELECT
neg_l => index.OUTPUTSELECT
neg_l => index.OUTPUTSELECT
neg_l => index.OUTPUTSELECT
neg_l => index.OUTPUTSELECT
neg_l => index.OUTPUTSELECT
neg_l => always0.IN0
neg_r => always0.IN1
neg_r => sending.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => data_tx.OUTPUTSELECT
neg_r => index.OUTPUTSELECT
neg_r => index.OUTPUTSELECT
neg_r => index.OUTPUTSELECT
neg_r => index.OUTPUTSELECT
neg_r => index.OUTPUTSELECT
neg_r => always0.IN1
valid => always0.IN1
ready <= uart_tx:uart_instance.ready
uart_out <= uart_tx:uart_instance.uart_out


|uart_comm|uart_tx:uart_instance
clk => parity_bit.CLK
clk => cycle_count[0].CLK
clk => cycle_count[1].CLK
clk => cycle_count[2].CLK
clk => cycle_count[3].CLK
clk => cycle_count[4].CLK
clk => cycle_count[5].CLK
clk => cycle_count[6].CLK
clk => cycle_count[7].CLK
clk => cycle_count[8].CLK
clk => cycle_count[9].CLK
clk => cycle_count[10].CLK
clk => cycle_count[11].CLK
clk => cycle_count[12].CLK
clk => cycle_count[13].CLK
clk => cycle_count[14].CLK
clk => cycle_count[15].CLK
clk => cycle_count[16].CLK
clk => cycle_count[17].CLK
clk => cycle_count[18].CLK
clk => cycle_count[19].CLK
clk => cycle_count[20].CLK
clk => cycle_count[21].CLK
clk => cycle_count[22].CLK
clk => cycle_count[23].CLK
clk => cycle_count[24].CLK
clk => cycle_count[25].CLK
clk => cycle_count[26].CLK
clk => cycle_count[27].CLK
clk => cycle_count[28].CLK
clk => cycle_count[29].CLK
clk => cycle_count[30].CLK
clk => cycle_count[31].CLK
clk => bit_n[0].CLK
clk => bit_n[1].CLK
clk => bit_n[2].CLK
clk => data_tx_temp[0].CLK
clk => data_tx_temp[1].CLK
clk => data_tx_temp[2].CLK
clk => data_tx_temp[3].CLK
clk => data_tx_temp[4].CLK
clk => data_tx_temp[5].CLK
clk => data_tx_temp[6].CLK
clk => data_tx_temp[7].CLK
clk => current_state[0].CLK
clk => current_state[1].CLK
clk => current_state[2].CLK
clk => current_state[3].CLK
clk => current_state[4].CLK
clk => current_state[5].CLK
clk => current_state[6].CLK
clk => current_state[7].CLK
clk => current_state[8].CLK
clk => current_state[9].CLK
clk => current_state[10].CLK
clk => current_state[11].CLK
clk => current_state[12].CLK
clk => current_state[13].CLK
clk => current_state[14].CLK
clk => current_state[15].CLK
clk => current_state[16].CLK
clk => current_state[17].CLK
clk => current_state[18].CLK
clk => current_state[19].CLK
clk => current_state[20].CLK
clk => current_state[21].CLK
clk => current_state[22].CLK
clk => current_state[23].CLK
clk => current_state[24].CLK
clk => current_state[25].CLK
clk => current_state[26].CLK
clk => current_state[27].CLK
clk => current_state[28].CLK
clk => current_state[29].CLK
clk => current_state[30].CLK
clk => current_state[31].CLK
rst => current_state.OUTPUTSELECT
rst => current_state.OUTPUTSELECT
rst => current_state.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => bit_n.OUTPUTSELECT
rst => bit_n.OUTPUTSELECT
rst => bit_n.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => parity_bit.ENA
data_tx[0] => data_tx_temp.DATAB
data_tx[1] => data_tx_temp.DATAB
data_tx[2] => data_tx_temp.DATAB
data_tx[3] => data_tx_temp.DATAB
data_tx[4] => data_tx_temp.DATAB
data_tx[5] => data_tx_temp.DATAB
data_tx[6] => data_tx_temp.DATAB
data_tx[7] => data_tx_temp.DATAB
uart_out <= Selector38.DB_MAX_OUTPUT_PORT_TYPE
valid => Selector2.IN7
ready <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
baud_trigger <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


