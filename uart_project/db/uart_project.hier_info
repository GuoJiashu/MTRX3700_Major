|top_level
CLOCK_50 => CLOCK_50.IN2
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> arduino_uart_buffer:u_rx.arduino_input
GPIO[4] <> <UNC>
GPIO[5] <> uart_tx:u_tx.uart_out
LEDR[0] << buffer[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << buffer[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] << buffer[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] << buffer[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] << buffer[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] << buffer[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] << buffer[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] << buffer[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] << <GND>
LEDR[9] << <GND>
LEDR[10] << <GND>
LEDR[11] << <GND>
LEDR[12] << <GND>
LEDR[13] << <GND>
LEDR[14] << <GND>
LEDR[15] << <GND>
LEDR[16] << <GND>
LEDR[17] << <GND>


|top_level|arduino_uart_buffer:u_rx
clk_50 => arduino_command[0]~reg0.CLK
clk_50 => arduino_command[1]~reg0.CLK
clk_50 => arduino_command[2]~reg0.CLK
clk_50 => arduino_command[3]~reg0.CLK
clk_50 => arduino_command[4]~reg0.CLK
clk_50 => arduino_command[5]~reg0.CLK
clk_50 => arduino_command[6]~reg0.CLK
clk_50 => arduino_command[7]~reg0.CLK
clk_50 => input_buffer[0].CLK
clk_50 => input_buffer[1].CLK
clk_50 => input_buffer[2].CLK
clk_50 => input_buffer[3].CLK
clk_50 => input_buffer[4].CLK
clk_50 => input_buffer[5].CLK
clk_50 => input_buffer[6].CLK
clk_50 => input_buffer[7].CLK
clk_50 => bit_counter[0].CLK
clk_50 => bit_counter[1].CLK
clk_50 => bit_counter[2].CLK
clk_50 => bit_counter[3].CLK
clk_50 => clk_counter[0].CLK
clk_50 => clk_counter[1].CLK
clk_50 => clk_counter[2].CLK
clk_50 => clk_counter[3].CLK
clk_50 => clk_counter[4].CLK
clk_50 => clk_counter[5].CLK
clk_50 => clk_counter[6].CLK
clk_50 => clk_counter[7].CLK
clk_50 => clk_counter[8].CLK
clk_50 => clk_counter[9].CLK
clk_50 => clk_counter[10].CLK
clk_50 => clk_counter[11].CLK
clk_50 => clk_counter[12].CLK
clk_50 => clk_counter[13].CLK
clk_50 => clk_counter[14].CLK
clk_50 => clk_counter[15].CLK
clk_50 => clk_counter[16].CLK
clk_50 => clk_counter[17].CLK
clk_50 => clk_counter[18].CLK
clk_50 => clk_counter[19].CLK
clk_50 => clk_counter[20].CLK
clk_50 => clk_counter[21].CLK
clk_50 => clk_counter[22].CLK
clk_50 => clk_counter[23].CLK
clk_50 => clk_counter[24].CLK
clk_50 => clk_counter[25].CLK
clk_50 => clk_counter[26].CLK
clk_50 => clk_counter[27].CLK
clk_50 => clk_counter[28].CLK
clk_50 => clk_counter[29].CLK
clk_50 => clk_counter[30].CLK
clk_50 => clk_counter[31].CLK
clk_50 => valid_q1.CLK
clk_50 => valid_q0.CLK
clk_50 => valid~reg0.CLK
reset => input_buffer[0].ACLR
reset => input_buffer[1].ACLR
reset => input_buffer[2].ACLR
reset => input_buffer[3].ACLR
reset => input_buffer[4].ACLR
reset => input_buffer[5].ACLR
reset => input_buffer[6].ACLR
reset => input_buffer[7].ACLR
reset => bit_counter[0].ACLR
reset => bit_counter[1].ACLR
reset => bit_counter[2].ACLR
reset => bit_counter[3].PRESET
reset => clk_counter[0].ACLR
reset => clk_counter[1].PRESET
reset => clk_counter[2].ACLR
reset => clk_counter[3].ACLR
reset => clk_counter[4].PRESET
reset => clk_counter[5].PRESET
reset => clk_counter[6].ACLR
reset => clk_counter[7].PRESET
reset => clk_counter[8].PRESET
reset => clk_counter[9].ACLR
reset => clk_counter[10].ACLR
reset => clk_counter[11].ACLR
reset => clk_counter[12].ACLR
reset => clk_counter[13].ACLR
reset => clk_counter[14].ACLR
reset => clk_counter[15].ACLR
reset => clk_counter[16].ACLR
reset => clk_counter[17].ACLR
reset => clk_counter[18].ACLR
reset => clk_counter[19].ACLR
reset => clk_counter[20].ACLR
reset => clk_counter[21].ACLR
reset => clk_counter[22].ACLR
reset => clk_counter[23].ACLR
reset => clk_counter[24].ACLR
reset => clk_counter[25].ACLR
reset => clk_counter[26].ACLR
reset => clk_counter[27].ACLR
reset => clk_counter[28].ACLR
reset => clk_counter[29].ACLR
reset => clk_counter[30].ACLR
reset => clk_counter[31].ACLR
reset => valid~reg0.ACLR
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
arduino_input => input_buffer.DATAB
ready => valid.OUTPUTSELECT
ready => always2.IN1
ready => always3.IN1
valid <= valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[0] <= arduino_command[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[1] <= arduino_command[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[2] <= arduino_command[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[3] <= arduino_command[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[4] <= arduino_command[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[5] <= arduino_command[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[6] <= arduino_command[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
arduino_command[7] <= arduino_command[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|uart_tx:u_tx
clk => parity_bit.CLK
clk => cycle_count[0].CLK
clk => cycle_count[1].CLK
clk => cycle_count[2].CLK
clk => cycle_count[3].CLK
clk => cycle_count[4].CLK
clk => cycle_count[5].CLK
clk => cycle_count[6].CLK
clk => cycle_count[7].CLK
clk => cycle_count[8].CLK
clk => cycle_count[9].CLK
clk => cycle_count[10].CLK
clk => cycle_count[11].CLK
clk => cycle_count[12].CLK
clk => cycle_count[13].CLK
clk => cycle_count[14].CLK
clk => cycle_count[15].CLK
clk => cycle_count[16].CLK
clk => cycle_count[17].CLK
clk => cycle_count[18].CLK
clk => cycle_count[19].CLK
clk => cycle_count[20].CLK
clk => cycle_count[21].CLK
clk => cycle_count[22].CLK
clk => cycle_count[23].CLK
clk => cycle_count[24].CLK
clk => cycle_count[25].CLK
clk => cycle_count[26].CLK
clk => cycle_count[27].CLK
clk => cycle_count[28].CLK
clk => cycle_count[29].CLK
clk => cycle_count[30].CLK
clk => cycle_count[31].CLK
clk => bit_n[0].CLK
clk => bit_n[1].CLK
clk => bit_n[2].CLK
clk => data_tx_temp[0].CLK
clk => data_tx_temp[1].CLK
clk => data_tx_temp[2].CLK
clk => data_tx_temp[3].CLK
clk => data_tx_temp[4].CLK
clk => data_tx_temp[5].CLK
clk => data_tx_temp[6].CLK
clk => data_tx_temp[7].CLK
clk => current_state[0].CLK
clk => current_state[1].CLK
clk => current_state[2].CLK
clk => current_state[3].CLK
clk => current_state[4].CLK
clk => current_state[5].CLK
clk => current_state[6].CLK
clk => current_state[7].CLK
clk => current_state[8].CLK
clk => current_state[9].CLK
clk => current_state[10].CLK
clk => current_state[11].CLK
clk => current_state[12].CLK
clk => current_state[13].CLK
clk => current_state[14].CLK
clk => current_state[15].CLK
clk => current_state[16].CLK
clk => current_state[17].CLK
clk => current_state[18].CLK
clk => current_state[19].CLK
clk => current_state[20].CLK
clk => current_state[21].CLK
clk => current_state[22].CLK
clk => current_state[23].CLK
clk => current_state[24].CLK
clk => current_state[25].CLK
clk => current_state[26].CLK
clk => current_state[27].CLK
clk => current_state[28].CLK
clk => current_state[29].CLK
clk => current_state[30].CLK
clk => current_state[31].CLK
rst => current_state.OUTPUTSELECT
rst => current_state.OUTPUTSELECT
rst => current_state.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => data_tx_temp.OUTPUTSELECT
rst => bit_n.OUTPUTSELECT
rst => bit_n.OUTPUTSELECT
rst => bit_n.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => cycle_count.OUTPUTSELECT
rst => parity_bit.ENA
data_tx[0] => data_tx_temp.DATAB
data_tx[1] => data_tx_temp.DATAB
data_tx[2] => data_tx_temp.DATAB
data_tx[3] => data_tx_temp.DATAB
data_tx[4] => data_tx_temp.DATAB
data_tx[5] => data_tx_temp.DATAB
data_tx[6] => data_tx_temp.DATAB
data_tx[7] => data_tx_temp.DATAB
uart_out <= Selector38.DB_MAX_OUTPUT_PORT_TYPE
valid => Selector2.IN7
ready <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
baud_trigger <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


