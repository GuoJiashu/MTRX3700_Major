|top_level
CLOCK_50 => CLOCK_50.IN3
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[35] <> GPIO[35]
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => _.IN1
KEY[3] => ~NO_FANOUT~
LEDG[0] << sensor_driver:u0.LEDG
LEDG[1] << sensor_driver:u0.LEDG
LEDG[2] << sensor_driver:u0.LEDG
LEDG[3] << sensor_driver:u0.LEDG
LEDG[4] << sensor_driver:u0.LEDG
LEDG[5] << sensor_driver:u0.LEDG
LEDG[6] << sensor_driver:u0.LEDG
LEDG[7] << sensor_driver:u0.LEDG
LEDR[10] << sensor_driver:u0.distance_out
LEDR[11] << sensor_driver:u0.distance_out
LEDR[12] << sensor_driver:u0.distance_out
LEDR[13] << sensor_driver:u0.distance_out
LEDR[14] << sensor_driver:u0.distance_out
LEDR[15] << sensor_driver:u0.distance_out
LEDR[16] << sensor_driver:u0.distance_out
LEDR[17] << sensor_driver:u0.distance_out


|top_level|debounce:enable
clk => button_q0.CLK
clk => button_pressed.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => new_button_pressed.CLK
button => always0.IN1
button => new_button_pressed.DATAIN
button_edge <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|debounce:reset_edge
clk => button_q0.CLK
clk => button_pressed.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => new_button_pressed.CLK
button => always0.IN1
button => new_button_pressed.DATAIN
button_edge <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|sensor_driver:u0
clk => distanceRAW_in_cm[24].CLK
clk => distanceRAW_in_cm[25].CLK
clk => distanceRAW_in_cm[26].CLK
clk => distanceRAW_in_cm[27].CLK
clk => distanceRAW_in_cm[28].CLK
clk => distanceRAW_in_cm[29].CLK
clk => distanceRAW_in_cm[30].CLK
clk => distanceRAW_in_cm[31].CLK
clk => distanceRAW[0].CLK
clk => distanceRAW[1].CLK
clk => distanceRAW[2].CLK
clk => distanceRAW[3].CLK
clk => distanceRAW[4].CLK
clk => distanceRAW[5].CLK
clk => distanceRAW[6].CLK
clk => distanceRAW[7].CLK
clk => distanceRAW[8].CLK
clk => distanceRAW[9].CLK
clk => distanceRAW[10].CLK
clk => distanceRAW[11].CLK
clk => distanceRAW[12].CLK
clk => distanceRAW[13].CLK
clk => distanceRAW[14].CLK
clk => distanceRAW[15].CLK
clk => distanceRAW[16].CLK
clk => distanceRAW[17].CLK
clk => distanceRAW[18].CLK
clk => distanceRAW[19].CLK
clk => distanceRAW[20].CLK
clk => distanceRAW[21].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => display_counter[0].CLK
clk => display_counter[1].CLK
clk => display_counter[2].CLK
clk => display_counter[3].CLK
clk => display_counter[4].CLK
clk => display_counter[5].CLK
clk => display_counter[6].CLK
clk => display_counter[7].CLK
clk => display_counter[8].CLK
clk => display_counter[9].CLK
clk => display_counter[10].CLK
clk => display_counter[11].CLK
clk => display_counter[12].CLK
clk => display_counter[13].CLK
clk => display_counter[14].CLK
clk => display_counter[15].CLK
clk => display_counter[16].CLK
clk => display_counter[17].CLK
clk => display_counter[18].CLK
clk => display_counter[19].CLK
clk => display_counter[20].CLK
clk => display_counter[21].CLK
clk => display_counter[22].CLK
clk => display_counter[23].CLK
clk => display_counter[24].CLK
clk => timer_counter[0].CLK
clk => timer_counter[1].CLK
clk => timer_counter[2].CLK
clk => timer_counter[3].CLK
clk => timer_counter[4].CLK
clk => timer_counter[5].CLK
clk => timer_counter[6].CLK
clk => timer_counter[7].CLK
clk => timer_counter[8].CLK
clk => timer_counter[9].CLK
clk => timer_counter[10].CLK
clk => timer_counter[11].CLK
clk => timer_counter[12].CLK
clk => timer_counter[13].CLK
clk => timer_counter[14].CLK
clk => timer_counter[15].CLK
clk => timer_counter[16].CLK
clk => timer_counter[17].CLK
clk => timer_counter[18].CLK
clk => timer_counter[19].CLK
clk => timer_counter[20].CLK
clk => timer_counter[21].CLK
clk => timer_counter[22].CLK
clk => timer_counter[23].CLK
clk => timer_counter[24].CLK
clk => reset_counter[0].CLK
clk => reset_counter[1].CLK
clk => reset_counter[2].CLK
clk => reset_counter[3].CLK
clk => reset_counter[4].CLK
clk => reset_counter[5].CLK
clk => reset_counter[6].CLK
clk => reset_counter[7].CLK
clk => reset_counter[8].CLK
clk => reset_counter[9].CLK
clk => reset_counter[10].CLK
clk => reset_counter[11].CLK
clk => reset_counter[12].CLK
clk => reset_counter[13].CLK
clk => reset_counter[14].CLK
clk => reset_counter[15].CLK
clk => reset_counter[16].CLK
clk => reset_counter[17].CLK
clk => reset_counter[18].CLK
clk => reset_counter[19].CLK
clk => reset_counter[20].CLK
clk => reset_counter[21].CLK
clk => reset_counter[22].CLK
clk => reset_counter[23].CLK
clk => reset_counter[24].CLK
clk => state~1.DATAIN
rst => LEDG.OUTPUTSELECT
rst => LEDG.OUTPUTSELECT
rst => LEDG.OUTPUTSELECT
rst => LEDG.OUTPUTSELECT
rst => LEDG.OUTPUTSELECT
rst => always5.IN1
echo => Selector3.IN1
echo => Selector4.IN1
echo => Selector2.IN1
enable => ~NO_FANOUT~
LEDG[0] <= LEDG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= LEDG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] <= LEDG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[3] <= LEDG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[4] <= LEDG.DB_MAX_OUTPUT_PORT_TYPE
LEDG[5] <= <GND>
LEDG[6] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[7] <= <GND>
trig <= inTRIGGER.DB_MAX_OUTPUT_PORT_TYPE
distance_out[0] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[1] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[2] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[3] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[4] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[5] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[6] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE
distance_out[7] <= distance_out.DB_MAX_OUTPUT_PORT_TYPE


